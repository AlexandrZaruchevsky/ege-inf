# Импортируем модуль для работы с регулярными выражениями
import re
# Пишем регулярное выражение для шаблона *Ч32??, где ? - одна произвольная цифра, * - любая числовая
# последовательность или пустая последовательность, Ч - одна четная цифра
# В регулярном выражении [2468] - любая чётная цифра, \d* - любая числовая последовательность
# или пустая последовательность, \d{2} - ровно две любые цифры.
# Для условий нашей задачи регулярное выражение должно начинаться с ^, что означает начало строки
# и заканчиваться $ - означает конец строки. Иначе (если не будет ^ и $) могут быть отобраны цифры
# в состав которых входит последовательность, удовлетворяющая нашему регулярному выражению
pattern = re.compile(r'^[1-9]*\d*[2468]32\d{2}$')
# Генерируем список натуральных чисел, делящихся на 780 и на 1323, выбирая для этого диапазон от 780
# до 3*(10**8) с шагом 780 и проверяя на соответствие регулярному выражению и делится на 1323
lst = [x for x in range(780, 3 * (10 ** 8), 780) if pattern.match(str(x)) is not None and x % 1323 == 0]
# Сортируем по убыванию
lst.sort(reverse=True)
# Выводим в консоль
for x in lst:
  print(x, x // 780)

# Формирование списка в одну строку
# li11071 = [x for x in range(11071, 10 ** 10, 11071) if pattern.match(str(x)) is not None and int(str(x)[4:-1]) % 2 == 0]
# li11071.sort(reverse=True)
# for x in li11071[:5][::-1]:
#   print(x, x // 11071)